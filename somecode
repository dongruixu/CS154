//打印一个n阶方阵，形如
// 1 8 7
// 2 9 6
// 3 4 5
#include <iostream>
using namespace std;

void PrintN(int a[10][10], int n, int num, int i);

int main()
{
    int a[10][10]={0};
    int n;
    cout << "请输入打印的阶数：";
    cin >> n;

    PrintN(a, n, 1, 0);
    for(int i=0; i<n; i++)
    {
        for(int j=0; j<n; j++)
            cout << a[i][j] << '\t';
        cout << endl;
    }

    return 0;
}

void PrintN(int a[10][10], int n, int num, int i)
{
    if(n == 1)
        a[i][i]=num;
    else if(n == 2)
    {
        a[i][i]=num;
        a[i][i+1]=num+3;
        a[i+1][i]=num+1;
        a[i+1][i+1]=num+2;
    }
    else
    {
        int m;
        int Max = num;
        for(m=i; m<i+n; m++,Max++)
            a[m][i] = Max;
        for(m=i+1; m<i+n; m++,Max++)
            a[i+n-1][m] = Max;
        for(m=m-2; m>=i; m--,Max++)
            a[m][i+n-1] = Max;
        for(m=i+n-2; m>i; m--,Max++)
            a[i][m] = Max;
        num = num + 4*(n-1);
        PrintN(a, n-2, num, i+1);
    }
}
